<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>西伯利亚大尾巴狼</title>
  <icon>https://www.gravatar.com/avatar/7d9cee11c8c05e013b8780c0530e6e5b</icon>
  <subtitle>子非鱼，安知鱼之乐？</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="blog.yuanqinglong.cn/"/>
  <updated>2018-01-20T15:22:38.999Z</updated>
  <id>blog.yuanqinglong.cn/</id>
  
  <author>
    <name>袁庆龙</name>
    <email>yuanql96@yeah.net</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>原生JS实现jQuery的addClass, removeClass, hasClass函数功能</title>
    <link href="blog.yuanqinglong.cn/%E5%8E%9F%E7%94%9FJS%E5%AE%9E%E7%8E%B0jQuery%E7%9A%84addClass,%20removeClass,%20hasClass%E5%87%BD%E6%95%B0%E5%8A%9F%E8%83%BD.html"/>
    <id>blog.yuanqinglong.cn/原生JS实现jQuery的addClass, removeClass, hasClass函数功能.html</id>
    <published>2018-01-20T15:21:08.000Z</published>
    <updated>2018-01-20T15:22:38.999Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-addClass"><a href="#1-addClass" class="headerlink" title="- [1] addClass"></a>- [1] addClass</h4><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">function addClass(obj, cls)&#123;</span><br><span class="line">    var obj_class = obj.className;//获取 class 内容.</span><br><span class="line">    var blank = (obj_class != &apos;&apos;) ? &apos; &apos; : &apos;&apos;;//判断获取到的 class 是否为空, 如果不为空在前面加个&apos;空格&apos;.</span><br><span class="line">    var added = obj_class + blank + cls;//组合原来的 class 和需要添加的 class.</span><br><span class="line">    obj.className = added;//替换原来的 class.</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-removeClass"><a href="#2-removeClass" class="headerlink" title="- [2]  removeClass"></a>- [2]  removeClass</h4><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">function removeClass(obj, cls)&#123;</span><br><span class="line">    var obj_class = &apos; &apos;+obj.className+&apos; &apos;;//获取 class 内容, 并在首尾各加一个空格. ex) &apos;abc        bcd&apos; -&gt; &apos; abc        bcd &apos;</span><br><span class="line">    obj_class = obj_class.replace(/(\s+)/gi, &apos; &apos;),//将多余的空字符替换成一个空格. ex) &apos; abc        bcd &apos; -&gt; &apos; abc bcd &apos;</span><br><span class="line">    var removed = obj_class.replace(&apos; &apos;+cls+&apos; &apos;, &apos; &apos;);//在原来的 class 替换掉首尾加了空格的 class. ex) &apos; abc bcd &apos; -&gt; &apos;bcd &apos;</span><br><span class="line">    removed = removed.replace(/(^\s+)|(\s+$)/g, &apos;&apos;);//去掉首尾空格. ex) &apos;bcd &apos; -&gt; &apos;bcd&apos;</span><br><span class="line">    obj.className = removed;//替换原来的 class.</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-hasClass"><a href="#3-hasClass" class="headerlink" title="- [3]  hasClass"></a>- [3]  hasClass</h4><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">function hasClass(obj, cls)&#123;</span><br><span class="line">    var obj_class = obj.className;//获取 class 内容.</span><br><span class="line">    var obj_class_lst = obj_class.split(/\s+/);//通过split空字符将cls转换成数组.</span><br><span class="line">    var x = 0;</span><br><span class="line">    for(x in obj_class_lst) &#123;</span><br><span class="line">        if(obj_class_lst[x] == cls) &#123;//循环数组, 判断是否包含cls</span><br><span class="line">            return true;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return false;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="原文链接-link"><a href="#原文链接-link" class="headerlink" title="==原文链接   ++link++=="></a>==<strong>原文链接</strong>   ++<a href="https://lvwenhan.com/web-front/374.html" target="_blank" rel="noopener">link</a>++==</h6><blockquote><h4 id="或者"><a href="#或者" class="headerlink" title="或者"></a>或者</h4></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 判断样式是否存在</span><br><span class="line"> */</span><br><span class="line">function hasClass(obj, cls) &#123;</span><br><span class="line">  return obj.className.match(new RegExp(&apos;(\\s|^)&apos; + cls + &apos;(\\s|$)&apos;));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 为指定的dom元素添加样式</span><br><span class="line"> */</span><br><span class="line">function addClass(obj, cls) &#123;</span><br><span class="line">  if (!this.hasClass(obj, cls)) obj.className += &quot; &quot; + cls;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 删除指定dom元素的样式</span><br><span class="line"> */</span><br><span class="line">function removeClass(obj, cls) &#123;</span><br><span class="line">  if (hasClass(obj, cls)) &#123;</span><br><span class="line">    var reg = new RegExp(&apos;(\\s|^)&apos; + cls + &apos;(\\s|$)&apos;);</span><br><span class="line">    obj.className = obj.className.replace(reg, &apos; &apos;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 如果存在(不存在)，就删除(添加)一个样式</span><br><span class="line"> */</span><br><span class="line">function toggleClass(obj, cls) &#123;</span><br><span class="line">  if (hasClass(obj, cls)) &#123;</span><br><span class="line">    removeClass(obj, cls);</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    addClass(obj, cls);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="原文链接-link-1"><a href="#原文链接-link-1" class="headerlink" title="==原文链接   ++link++=="></a>==<strong>原文链接</strong>   ++<a href="http://www.edaoe.com/560.html" target="_blank" rel="noopener">link</a>++==</h6>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1-addClass&quot;&gt;&lt;a href=&quot;#1-addClass&quot; class=&quot;headerlink&quot; title=&quot;- [1] addClass&quot;&gt;&lt;/a&gt;- [1] addClass&lt;/h4&gt;&lt;hr&gt;&lt;figure class=&quot;highlight plai
      
    
    </summary>
    
      <category term="前端" scheme="blog.yuanqinglong.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="jquery js" scheme="blog.yuanqinglong.cn/tags/jquery-js/"/>
    
  </entry>
  
  <entry>
    <title>css解决背景透明的兼容性问题</title>
    <link href="blog.yuanqinglong.cn/css%E8%A7%A3%E5%86%B3%E8%83%8C%E6%99%AF%E9%80%8F%E6%98%8E%E7%9A%84%E5%85%BC%E5%AE%B9%E6%80%A7%E9%97%AE%E9%A2%98.html"/>
    <id>blog.yuanqinglong.cn/css解决背景透明的兼容性问题.html</id>
    <published>2018-01-19T01:33:33.000Z</published>
    <updated>2018-01-20T05:27:15.699Z</updated>
    
    <content type="html"><![CDATA[<h3 id="全浏览器兼容背景半透明的问题的么几个解决方案："><a href="#全浏览器兼容背景半透明的问题的么几个解决方案：" class="headerlink" title="全浏览器兼容背景半透明的问题的么几个解决方案："></a>全浏览器兼容背景半透明的问题的么几个解决方案：</h3><h5 id="1-使用半透明png图片平铺"><a href="#1-使用半透明png图片平铺" class="headerlink" title="1.使用半透明png图片平铺"></a>1.使用半透明png图片平铺</h5><h5 id="2-使用opcacity属性"><a href="#2-使用opcacity属性" class="headerlink" title="2.使用opcacity属性"></a>2.使用opcacity属性</h5><h5 id="3-使用rgba和IE的opacity滤镜属性结合"><a href="#3-使用rgba和IE的opacity滤镜属性结合" class="headerlink" title="3.使用rgba和IE的opacity滤镜属性结合"></a>3.使用rgba和IE的opacity滤镜属性结合</h5><a id="more"></a><h4 id="RGBA颜色"><a href="#RGBA颜色" class="headerlink" title="RGBA颜色"></a>RGBA颜色</h4><hr><p>rgba颜色的四个属性分别表示 red红色、green绿色、blue蓝色、alpha透明度。通过这几个数值能够轻松实现背景透明。代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.backTtansparent&#123;</span><br><span class="line">/* 用于不支持RGBa的浏览器 */</span><br><span class="line">background: rgb(0, 0, 0);</span><br><span class="line">/* RGBa, 透明度0.6 */</span><br><span class="line">background: rgba(0, 0, 0, 0.6);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样透明只对背景生效，对于非 ie 浏览器是非常完美的解决方案。<br>不幸的是 ie8 及以下不支持 rgba 属性，并且经测试 ie9 会把 rgba 解析为全透明。</p><h4 id="IE的filter"><a href="#IE的filter" class="headerlink" title="IE的filter"></a>IE的filter</h4><hr><p>通过background: transparent注释可解决 ie9 解析rgba全透明问题。通过ie 的 filter 属性便可让 ie 支持背景透明。代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.backTtansparent&#123;</span><br><span class="line">background: transparent/9;</span><br><span class="line">/* For IE 5.5 - 7*/</span><br><span class="line">filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#99000000, endColorstr=#99000000);</span><br><span class="line">/* For IE 8*/</span><br><span class="line">-ms-filter: &quot;progid:DXImageTransform.Microsoft.gradient(startColorstr=#99000000, endColorstr=#99000000)&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>能够看到filter中的8位16进制的半透明颜色#99000000为argb颜色，既#AARRGGBB，前两位是透明度，后面分别是红绿蓝。</li><li>如果我们希望透明度为 0.6，则需要将 0.6 乘以 255,再转化为 16 进制。最简单的方法是利用 JavaScript，在浏览器的调试面板里输入：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Math.floor(0.6 * 255).toString(16);</span><br></pre></td></tr></table></figure><ul><li>回车后可以看到结果为99。这样透明度0.6的黑色的argb颜色即为#99000000。<h4 id="代码整合"><a href="#代码整合" class="headerlink" title="代码整合"></a>代码整合</h4></li></ul><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">background: rgb(0, 0, 0);</span><br><span class="line">    /* RGBa with 0.6 opacity */</span><br><span class="line">    background: rgba(0, 0, 0, 0.6);</span><br><span class="line">    /* For IE 5.5 - 7*/</span><br><span class="line">    filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#99000000, endColorstr=#99000000);</span><br><span class="line">    /* For IE 8*/</span><br><span class="line">    -ms-filter: &quot;progid:DXImageTransform.Microsoft.gradient(startColorstr=#99000000, endColorstr=#99000000)&quot;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;全浏览器兼容背景半透明的问题的么几个解决方案：&quot;&gt;&lt;a href=&quot;#全浏览器兼容背景半透明的问题的么几个解决方案：&quot; class=&quot;headerlink&quot; title=&quot;全浏览器兼容背景半透明的问题的么几个解决方案：&quot;&gt;&lt;/a&gt;全浏览器兼容背景半透明的问题的么几个解决方案：&lt;/h3&gt;&lt;h5 id=&quot;1-使用半透明png图片平铺&quot;&gt;&lt;a href=&quot;#1-使用半透明png图片平铺&quot; class=&quot;headerlink&quot; title=&quot;1.使用半透明png图片平铺&quot;&gt;&lt;/a&gt;1.使用半透明png图片平铺&lt;/h5&gt;&lt;h5 id=&quot;2-使用opcacity属性&quot;&gt;&lt;a href=&quot;#2-使用opcacity属性&quot; class=&quot;headerlink&quot; title=&quot;2.使用opcacity属性&quot;&gt;&lt;/a&gt;2.使用opcacity属性&lt;/h5&gt;&lt;h5 id=&quot;3-使用rgba和IE的opacity滤镜属性结合&quot;&gt;&lt;a href=&quot;#3-使用rgba和IE的opacity滤镜属性结合&quot; class=&quot;headerlink&quot; title=&quot;3.使用rgba和IE的opacity滤镜属性结合&quot;&gt;&lt;/a&gt;3.使用rgba和IE的opacity滤镜属性结合&lt;/h5&gt;
    
    </summary>
    
      <category term="前端" scheme="blog.yuanqinglong.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="css兼容性" scheme="blog.yuanqinglong.cn/tags/css%E5%85%BC%E5%AE%B9%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="blog.yuanqinglong.cn/hello-world.html"/>
    <id>blog.yuanqinglong.cn/hello-world.html</id>
    <published>2018-01-17T13:17:10.145Z</published>
    <updated>2018-01-20T05:33:27.537Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.<br><a id="more"></a></p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p><h3 id="设置「阅读全文」"><a href="#设置「阅读全文」" class="headerlink" title="设置「阅读全文」"></a>设置「阅读全文」</h3><p>1.在文章中使用 <!-- more --> 手动进行截断，Hexo 提供的方式 推荐<br>2.在文章的 front-matter 中添加 description，并提供文章摘录<br>3.自动形成摘要，在 主题配置文件 中添加：</p><p>auto_excerpt:<br>  enable: true<br>  length: 150<br>默认截取的长度为 150 字符，可以根据需要自行设定</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;br&gt;
    
    </summary>
    
      <category term="hexo" scheme="blog.yuanqinglong.cn/categories/hexo/"/>
    
    
      <category term="hexo " scheme="blog.yuanqinglong.cn/tags/hexo/"/>
    
      <category term="常见使用问题" scheme="blog.yuanqinglong.cn/tags/%E5%B8%B8%E8%A7%81%E4%BD%BF%E7%94%A8%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
</feed>
