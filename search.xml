<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[关于object.key与object[key]的区别]]></title>
    <url>%2F%E5%85%B3%E4%BA%8Eobject-key%E4%B8%8Eobject-key-%E7%9A%84%E5%8C%BA%E5%88%AB.html</url>
    <content type="text"><![CDATA[记录所需要的，摒弃多余的。本篇文章是对segmentfault的一个问答的总结。obeject.key与object[key]有什么区别?有什么区别，不试试怎么知道？测试代码（其实有很多栗子，随便举一个）： var obj = { name: &apos;tom&apos;, age: 22 }, someKey = &apos;age&apos;; console.log(obj.name); console.log(obj[&apos;name&apos;]); console.log(obj.someKey); console.log(obj[someKey]); 测试结果：（放图）通常来讲， obj[“key”] 与 obj.key 的作用差不多，但是，如果key不确定（key是变量）的情况下，或者key的写法比较特殊（比如包含空格什么的）则只能通过obj[ ]的方式去访问]]></content>
      <categories>
        <category>前端技术</category>
      </categories>
      <tags>
        <tag>json</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Markdown常用语法]]></title>
    <url>%2FMarkdown%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95.html</url>
    <content type="text"><![CDATA[写博客，自然免不了接触Markdown,作为初学者，为了即用即查，我决定把相关命令记录下来，本文就是边学边写此处声明：本文是 参考他人的文章&amp;结合实践后，所写，另外，转载、复制随意，但请务必注明本文链接标题：写法:123456# h1级标题## h2级标题### h3级标题#### h4级标题##### h5级标题###### h6级标题 栗子： 这是一个h4级标题 注意： #与标题文字间要有空格 当-与#结合使用时，如果不想下一行受到干扰，可以使用Enter换行 分割线：连续三个&amp;三个以上的- 即可作出分割线 写法:1--- 栗子： 注意：建议写分割线时，与上一行留出一空行 超链接：写法1：1234[连接名称](网址 , 标题)[baidu](https://www.baidu.com, "baidu")[&lt;i class="icon-refresh"&gt;&lt;/i&gt; 点我刷新](/#) 栗子： baidu 点我刷新 写法2：12345[链接名][链接代号][链接代号]:详细地址[here][3][3]: http://www.baidu.com 栗子： here 写法3：1直接展示链接：&lt;http://www.baidu.com&gt; 栗子： 直接展示链接：http://www.baidu.com 键盘键用法：1&lt;kbd&gt;Ctrl+[&lt;/kbd&gt; and &lt;kbd&gt;Ctrl+]&lt;/kbd&gt; 栗子： Ctrl+[ and Ctrl+] code格式：反引号 用法：12Use the `printf()` function. ``There is a literal backtick (`) here.针对在代码区段内插入反引号的情况` 栗子： Use the printf() function. There is a literal backtick (`) here.针对在代码区段内插入反引号的情况 强调：用法：12*斜体强调***粗体强调** 栗子： 斜体强调 粗体强调 图片：用法：12![Alt text](../imgs/blogContentImgs/jhvh.jpg "这图我觉得扣得不错")如果图片链接失效的话，会显示 Alt text 栗子： 使用 icon 图标文字：用法：1&lt;i class="fa fa-github"&gt;&lt;/i&gt; 栗子： 段落： 以一个空行开始，以一个空行结束，中间的就是一个段落。 表格：用法：12345Item | Value-------- | ---Computer | $1600Phone | $12Pipe | $1 栗子： Item Value Computer $1600 Phone $12 Pipe $1 无序列表：使用 - 加一个空格 用法：123- 无需列表1- 无序列表2- 无序列表3 栗子： 无需列表1 无序列表2 无序列表3 有序列表：使用 数字 加一个英文句点 用法：123451. 有序列表2. 有序列表3. 有序列表4. 有序列表5. 有序列表 栗子： 有序列表 有序列表 有序列表 有序列表 有序列表 换行缩进形成代码区块：用法：这里先换行，然后缩进4个空格，之后的内容便可以原样显示了，适合用于显示代码内容。直到文本结束或最后一个存在缩进的行为止。 栗子：这里先换行，然后缩进4个空格，之后的内容便可以原样显示了，适合用于显示代码内容。直到文本结束或最后一个存在缩进的行为止。 块引用用法：12345678&gt;给引用的文本开始位置都加一个 '&gt;'，&gt;便可组成一个块引用。在块引用中，可以结合&gt;其他markdown元素一块使用，比如列表。&gt;**强调**也可以只在第一行加大于号，其他位置不加。&gt;- 块引用里使用列表，需要和上面的内容隔开一个空行&gt;- 记得加空格哦。 栗子： 给引用的文本开始位置都加一个 ‘&gt;’，便可组成一个块引用。在块引用中，可以结合其他markdown元素一块使用，比如列表。强调也可以只在第一行加大于号，其他位置不加。 块引用里使用列表，需要和上面的内容隔开一个空行 记得加空格哦。 本文参考链接：[掌握这几种 Markdown 语法你就够了]https://laravel-china.org/topics/621/you-will-be-able-to-master-these-markdown-grammars[中文文案排版指北]:https://github.com/sparanoid/chinese-copywriting-guidelines]]></content>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[原生JS实现jQuery的addClass, removeClass, hasClass函数功能]]></title>
    <url>%2F%E5%8E%9F%E7%94%9FJS%E5%AE%9E%E7%8E%B0jQuery%E7%9A%84addClass%2C%20removeClass%2C%20hasClass%E5%87%BD%E6%95%B0%E5%8A%9F%E8%83%BD.html</url>
    <content type="text"><![CDATA[- [1] addClass123456function addClass(obj, cls)&#123; var obj_class = obj.className;//获取 class 内容. var blank = (obj_class != &apos;&apos;) ? &apos; &apos; : &apos;&apos;;//判断获取到的 class 是否为空, 如果不为空在前面加个&apos;空格&apos;. var added = obj_class + blank + cls;//组合原来的 class 和需要添加的 class. obj.className = added;//替换原来的 class.&#125; - [2] removeClass 1234567function removeClass(obj, cls)&#123; var obj_class = &apos; &apos;+obj.className+&apos; &apos;;//获取 class 内容, 并在首尾各加一个空格. ex) &apos;abc bcd&apos; -&gt; &apos; abc bcd &apos; obj_class = obj_class.replace(/(\s+)/gi, &apos; &apos;),//将多余的空字符替换成一个空格. ex) &apos; abc bcd &apos; -&gt; &apos; abc bcd &apos; var removed = obj_class.replace(&apos; &apos;+cls+&apos; &apos;, &apos; &apos;);//在原来的 class 替换掉首尾加了空格的 class. ex) &apos; abc bcd &apos; -&gt; &apos;bcd &apos; removed = removed.replace(/(^\s+)|(\s+$)/g, &apos;&apos;);//去掉首尾空格. ex) &apos;bcd &apos; -&gt; &apos;bcd&apos; obj.className = removed;//替换原来的 class.&#125; - [3] hasClass 1234567891011function hasClass(obj, cls)&#123; var obj_class = obj.className;//获取 class 内容. var obj_class_lst = obj_class.split(/\s+/);//通过split空字符将cls转换成数组. var x = 0; for(x in obj_class_lst) &#123; if(obj_class_lst[x] == cls) &#123;//循环数组, 判断是否包含cls return true; &#125; &#125; return false;&#125; ==原文链接 ++link++== 或者 12345678910111213141516171819202122232425262728293031323334/** * 判断样式是否存在 */function hasClass(obj, cls) &#123; return obj.className.match(new RegExp(&apos;(\\s|^)&apos; + cls + &apos;(\\s|$)&apos;));&#125;/** * 为指定的dom元素添加样式 */function addClass(obj, cls) &#123; if (!this.hasClass(obj, cls)) obj.className += &quot; &quot; + cls;&#125;/** * 删除指定dom元素的样式 */function removeClass(obj, cls) &#123; if (hasClass(obj, cls)) &#123; var reg = new RegExp(&apos;(\\s|^)&apos; + cls + &apos;(\\s|$)&apos;); obj.className = obj.className.replace(reg, &apos; &apos;); &#125;&#125;/** * 如果存在(不存在)，就删除(添加)一个样式 */function toggleClass(obj, cls) &#123; if (hasClass(obj, cls)) &#123; removeClass(obj, cls); &#125; else &#123; addClass(obj, cls); &#125;&#125; ==原文链接 ++link++==]]></content>
      <categories>
        <category>前端技术</category>
      </categories>
      <tags>
        <tag>jquery</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[css解决背景透明的兼容性问题]]></title>
    <url>%2Fcss%E8%A7%A3%E5%86%B3%E8%83%8C%E6%99%AF%E9%80%8F%E6%98%8E%E7%9A%84%E5%85%BC%E5%AE%B9%E6%80%A7%E9%97%AE%E9%A2%98.html</url>
    <content type="text"><![CDATA[全浏览器兼容背景半透明的问题的么几个解决方案：1.使用半透明png图片平铺2.使用opcacity属性3.使用rgba和IE的opacity滤镜属性结合RGBA颜色rgba颜色的四个属性分别表示 red红色、green绿色、blue蓝色、alpha透明度。通过这几个数值能够轻松实现背景透明。代码如下：123456.backTtansparent&#123; /* 用于不支持RGBa的浏览器 */ background: rgb(0, 0, 0); /* RGBa, 透明度0.6 */ background: rgba(0, 0, 0, 0.6); &#125; 这样透明只对背景生效，对于非 ie 浏览器是非常完美的解决方案。不幸的是 ie8 及以下不支持 rgba 属性，并且经测试 ie9 会把 rgba 解析为全透明。 IE的filter 通过background: transparent注释可解决 ie9 解析rgba全透明问题。通过ie 的 filter 属性便可让 ie 支持背景透明。代码如下： 1234567.backTtansparent&#123; background: transparent/9; /* For IE 5.5 - 7*/ filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#99000000, endColorstr=#99000000); /* For IE 8*/ -ms-filter: &quot;progid:DXImageTransform.Microsoft.gradient(startColorstr=#99000000, endColorstr=#99000000)&quot;; &#125; 能够看到filter中的8位16进制的半透明颜色#99000000为argb颜色，既#AARRGGBB，前两位是透明度，后面分别是红绿蓝。 如果我们希望透明度为 0.6，则需要将 0.6 乘以 255,再转化为 16 进制。最简单的方法是利用 JavaScript，在浏览器的调试面板里输入： 12Math.floor(0.6 * 255).toString(16); 回车后可以看到结果为99。这样透明度0.6的黑色的argb颜色即为#99000000。代码整合 1234567background: rgb(0, 0, 0); /* RGBa with 0.6 opacity */ background: rgba(0, 0, 0, 0.6); /* For IE 5.5 - 7*/ filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#99000000, endColorstr=#99000000); /* For IE 8*/ -ms-filter: &quot;progid:DXImageTransform.Microsoft.gradient(startColorstr=#99000000, endColorstr=#99000000)&quot;;]]></content>
      <categories>
        <category>前端技术</category>
      </categories>
      <tags>
        <tag>css兼容性</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2Fhello-world.html</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment 设置「阅读全文」1.在文章中使用 手动进行截断，Hexo 提供的方式 推荐2.在文章的 front-matter 中添加 description，并提供文章摘录3.自动形成摘要，在 主题配置文件 中添加： auto_excerpt: enable: true length: 150默认截取的长度为 150 字符，可以根据需要自行设定 1$ hexo deploy]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>常用命令</tag>
      </tags>
  </entry>
</search>
